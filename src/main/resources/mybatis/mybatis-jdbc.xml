<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

   <!-- <bean class="com.june.util.JdbcConfigurer" p:location="classpath*:mybatis/jdbc.properties"></bean>  -->
	<!-- 引入jdbc配置文件 ,注意ignore-unresolvable="true"属性引入多个文件扫描器需要添加这个属性-->
	<context:property-placeholder location="classpath*:conf/jdbc.properties" ignore-unresolvable="true"/>
	<!--创建jdbc数据源 -->
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="initialSize" value="${initialSize}" />
        <property name="maxActive" value="${maxActive}" />
        <property name="maxWait" value="${maxWait}"></property>
        <property name="maxIdle" value="${maxIdle}"></property>    
		<property name="minIdle" value="${minIdle}"></property>   
        <property name="removeAbandoned" value="${removeAbandoned}"></property>    
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"></property>  
        <property name="testWhileIdle" value="${testWhileIdle}" />
        <property name="testOnBorrow" value="${testOnBorrow}" />
        <property name="testOnReturn" value="${testOnReturn}" />
        <property name="validationQuery" value="${validationQuery}" />
        <property name="validationQueryTimeout" value="${validationQueryTimeout}" />
        <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
        <property name="numTestsPerEvictionRun" value="${numTestsPerEvictionRun}" />
        <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" /> 
	</bean> -->

<!-- 配置druid数据源 -->  
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">  
        <property name="url" value="${url}" />  
        <property name="username" value="${username}" />  
        <property name="password" value="${password}" />  
        <property name="initialSize" value="${initialSize}" />  
        <property name="maxActive" value="${maxActive}" />  
        <property name="minIdle" value="${maxIdle}" />  
        <property name="maxWait" value="${maxWait}" />  
        <property name="validationQuery" value="${validationQuery}" />  
        <property name="testOnBorrow" value="${testOnReturn}" />  
        <property name="testOnReturn" value="${testOnBorrow}" />  
        <property name="testWhileIdle" value="${testWhileIdle}" />  
        <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />  
        <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />  
        <property name="removeAbandoned" value="${removeAbandoned}" />  
        <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />  
        <property name="logAbandoned" value="true" />  
        <property name="filters" value="${filters}" />  
    </bean> 
    
  <!-- <bean name="masterdataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">  
        <property name="url" value="${url}" />  
        <property name="username" value="${username}" />  
        <property name="password" value="${password}" />  
        <property name="initialSize" value="${initialSize}" />  
        <property name="maxActive" value="${maxActive}" />  
        <property name="minIdle" value="${maxIdle}" />  
        <property name="maxWait" value="${maxWait}" />  
        <property name="validationQuery" value="${validationQuery}" />  
        <property name="testOnBorrow" value="${testOnReturn}" />  
        <property name="testOnReturn" value="${testOnBorrow}" />  
        <property name="testWhileIdle" value="${testWhileIdle}" />  
        <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />  
        <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />  
        <property name="removeAbandoned" value="${removeAbandoned}" />  
        <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />  
        <property name="logAbandoned" value="true" />  
        <property name="filters" value="${filters}" />  
    </bean> 
    
    <bean name="slavedataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">  
        <property name="url" value="${urls}" />  
        <property name="username" value="${username}" />  
        <property name="password" value="${password}" />  
        <property name="initialSize" value="${initialSize}" />  
        <property name="maxActive" value="${maxActive}" />  
        <property name="minIdle" value="${maxIdle}" />  
        <property name="maxWait" value="${maxWait}" />  
        <property name="validationQuery" value="${validationQuery}" />  
        <property name="testOnBorrow" value="${testOnReturn}" />  
        <property name="testOnReturn" value="${testOnBorrow}" />  
        <property name="testWhileIdle" value="${testWhileIdle}" />  
        <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />  
        <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />  
        <property name="removeAbandoned" value="${removeAbandoned}" />  
        <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />  
        <property name="logAbandoned" value="true" />  
        <property name="filters" value="${filters}" />  
    </bean> 

	<bean id="dataSource" class="com.june.common.rwseperate.DynamicDataSource">
        <property name="targetDataSources">  
              <map key-type="java.lang.String">  
                  write
                 <entry key="master" value-ref="masterdataSource"/>  
                 read
                 <entry key="slave" value-ref="slavedataSource"/>  
              </map>  
        </property>  
        <property name="defaultTargetDataSource" ref="masterdataSource"/>  
    </bean> -->
    
    <!-- spring myBatis配置start -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
        <!-- 自动扫描Mapping.xml文件 -->
        <property name="mapperLocations">
        	<array>
                <value>classpath*:mybatis/mapper/*/*.xml</value>
                <value>classpath*:mybatis/mapper/*/*/*.xml</value>
            </array>
        </property>
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<property name="typeAliasesPackage" value="com.june.*,com.june.dao.*,com.june.shiro.dao.*,com.june.common.*"/>
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.june.shiro.dao,com.june.dao.*" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	<!-- myBatis配置end -->
	<!-- 数据连接管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 注解式事务处理 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 可通过注解控制事务 -->
	<!-- <tx:annotation-driven /> -->
	<!-- 声明式事务配置 -->
	<!-- 事务管理 属性 -->
    <!-- <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="append*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="modify*" propagation="REQUIRED"/>
            <tx:method name="edit*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="remove*" propagation="REQUIRED"/>
            <tx:method name="repair" propagation="REQUIRED"/>
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="load*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="search*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="datagrid*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED" read-only="true"/>
        </tx:attributes>
    </tx:advice> -->

    <!-- 配置切面 -->
    <!--  <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* com.june.service..*.*(..))"/>
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice"/>
    </aop:config> -->
</beans>
